{
======
Player
======
}

{ const Skills consts
  Description: To be used with Players.Level[] array
  Players woodcutting level: Players[i].Level[Skill_WoodCutting]
  Last Edit: 22 June 2010 -- Nava2
}
const
  SKILL_COUNT         = 25;
  SKILL_ATTACK        = 0;
  SKILL_DEFENCE       = 1;
  SKILL_STRENGTH      = 2;
  SKILL_HITPOINTS     = 3;    SKILL_HP = SKILL_HITPOINTS;
  SKILL_RANGE         = 4;
  SKILL_PRAYER        = 5;
  SKILL_MAGIC         = 6;
  SKILL_COOKING       = 7;
  SKILL_WOODCUTTING   = 8;
  SKILL_FLETCHING     = 9;
  SKILL_FISHING       = 10;
  SKILL_FIREMAKING    = 11;
  SKILL_CRAFTING      = 12;
  SKILL_SMITHING      = 13;
  SKILL_MINING        = 14;
  SKILL_HERBLORE      = 15;
  SKILL_AGILITY       = 16;
  SKILL_THIEVING      = 17;
  SKILL_SLAYER        = 18;
  SKILL_FARMING       = 19;
  SKILL_RUNECRAFTING  = 20;
  SKILL_HUNTER        = 21;
  SKILL_CONSTRUCTION  = 22;
  SKILL_COMBAT        = 23;
  SKILL_TOTAL         = 24;

function TPlayer.inCombat(): Boolean;
var
  B   : TBox;
  Pnt : TPoint;
begin
  if Self.ModelSet then
  begin
    B      := Self.Model.FullTPA.getBounds();
    Pnt    := Point(B.CX, B.Y1);
    B.X1   := Pnt.X-25;
    B.Y1   := Pnt.Y-25;
    B.X2   := Pnt.X+25;
    B.Y2   := Pnt.Y;
    Result := foundHPBarIn(B);
  end else
    Result := foundHPBarIn(toBox(230,130,288,163));
end;

Procedure definePlayerModel(maxW, maxH: Integer=0; colTol:Integer=20);
var
  b,dBox : TBox;
  T      : Timer;
  P,P2   : TPoint;
label
  Start;
begin
  Start:
  showMessage('Hover the mouse over your players chest for 2 seconds');
  wait(500);
  T.start();
  repeat
    if isMouseInClient() then
    begin
      P := getRealMousePnt();
      wait(20);
      if not pointsMatch(getRealMousePnt(), P) then
        T.start();
      liveColorDebug(dBox);
    end;
  until((T.timeElapsed > 2000));

  {$IFDEF SMART}
    OS_SMART.__Graphics.ClearArea(dBox);
  {$ELSE}
    LayerBMP.clearArea(dBox);
  {$ENDIF}
  if isMouseInClient() then
    P := getRealMousePnt();

  showMessage('Hover the mouse over your players legs for 2 seconds');
  wait(500);
  T.start();
  repeat
    if isMouseInClient() then
    begin
      P2 := getRealMousePnt();
      wait(20);
      if not pointsMatch(getRealMousePnt(), P2) then
        T.start();
      liveColorDebug(dBox);
    end;
  until((T.timeElapsed > 2000));

  {$IFDEF SMART}
    OS_SMART.__Graphics.ClearArea(dBox);
  {$ELSE}
    LayerBMP.clearArea(dBox);
  {$ENDIF}
  if isMouseInClient() then
    P2 := getRealMousePnt();

  Me.Model.define(P, P2, colTol);
  Me.Model.Update();
  b := Me.Model.Bounds;

  if (maxW > 0) and (maxH > 0) then
    if ((b.Width > maxW) and (b.Height > maxH)) then
    begin
      showMessage('Inaccurate selection, please try again');
      wait(1500);
      GoTo Start;
    end;

  Me.ModelSet := True;
  warn('Player entity defined', WT_CORE);
end;

function getDisplayName(): String;
var
  textCol : TColEx;
  xMod    : Integer;
  pnts    : TPointArray;
begin
  textCol.create(16711680, 30);
  if not textCol.findAllIn(toBox(10, 460, 145, 476), pnts) then Exit;
  sortTPAFrom(pnts, point(10,468));
  xMod   := pnts[0].X;
  result := getTextAtExWrap(10, 460, xMod, 476, 0, 5, 2, 0, 1, 'UpChars07');
  result := replace(result, '.', '');
end;
